---
version: 2

#
# References for reusability
#
references:
  common-env-vars: &common-env-vars
    DOCKERHUB_USER: "yuiskw"

  working_directory: &working_directory
    ~/project

  docker-images:
    python-image: &python-image
      working_directory: *working_directory
      docker:
        - image: circleci/python:3.8.5
          environment:
            <<: *common-env-vars
    hadolint: &hadolint-image
      working_directory: *working_directory
      docker:
        - image: hadolint/hadolint
    google-cloud-sdk-image: &google-cloud-sdk-image
      working_directory: *working_directory
      docker:
        - image: google/cloud-sdk:307.0.0
          environment:
            <<: *common-env-vars

  shared-steps:
    install-libraries: &install-libraries
      name: Set up environment
      command: |
        apt-get update -y \
            && apt-get install -y build-essential yamllint python3 python3-dev
    install-python3: &install-python3
      name: Install python3
      command: |
        apt-get update -y \
            && apt-get install -y python3 python3-dev
    install-shellcheck: &install-shellcheck
      name: Install shellcheck
      command: |
        apt-get update -y \
            && apt-get install -y shellcheck
    activate-dockerhub: &activate-dockerhub
      name: Activate Docker Hub account
      command: |
        docker login -u "${DOCKERHUB_USER}" -p "${DOCKERHUB_PASSWORD}"

#
# jobs
#
jobs:
  lint-shell:
    <<: *python-image
    steps:
      - checkout
      - run:
          <<: *install-libraries
      - run:
          <<: *install-shellcheck
      - run:
          name: Run shellcheck
          command: |
            bash ./dev/lint_shell.sh

  lint-dockerfiles:
    <<: *hadolint-image
    steps:
      - checkout
      - run:
          name: Install bash
          command: |
            apk update && apk add bash
      - run:
          name: Run hadolint
          command: |
            bash ./dev/lint_dockerfiles.sh

  lint-and-test-python:
    <<: *python-image
    steps:
      - checkout
      - run:
          <<: *install-libraries
      - run:
          name: Lint python
          command: |
            make lint-python
      - run:
          name: Set up
          command: |
            make setup
      - run:
          name: Find unsecure modules with safety
          command: |
            make safety
      - run:
          name: Run unit tests
          command: |
            make test
      - run:
          name: Test installation
          command: |
            pip install -e .

  build-docker:
    <<: *python-image
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.12
      - run:
          <<: *activate-dockerhub
      - run:
          name: Build and push docker image with dbt in prod
          command: |
            COMMIT_REF=$(git describe --always)
            bash ./dev/build_dbt-helper_docker.sh "build" "${COMMIT_REF}"

  push-docker:
    <<: *python-image
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.12
      - run:
          <<: *activate-dockerhub
      - run:
          name: Build and push docker image with dbt in prod
          command: |
            GIT_TAG=${CIRCLE_TAG:?}
            bash ./dev/build_dbt-helper_docker.sh "push" "${TAG}"

#
# Workflows
#
workflows:
  version: 2
  build:
    jobs:
      - lint-shell:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - lint-dockerfiles:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - lint-and-test-python:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - build-docker:
          # Trigger in any branch
          filters:
            branches:
              only: /.*/
            tags:
              ignore: /.*/
          requires:
            - lint-shell
            - lint-dockerfiles
            - lint-and-test-python
      - push-docker:
          # Trigger when tagging
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
          requires:
            - lint-shell
            - lint-dockerfiles
            - lint-and-test-python